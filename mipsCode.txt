.data
memory: .space 5000
stack: .space 5000
temp: .space 5000
STRING14: .asciiz " 10! = "
STRING13: .asciiz "          The total is "
STRING12: .asciiz "          "
STRING11: .asciiz " "
STRING10: .asciiz " ---------------------------------------------------------------          "
STRING9: .asciiz " b = "
STRING8: .asciiz " ---------------------------------------------------------------          "
STRING7: .asciiz "          "
STRING6: .asciiz "  "
STRING5: .asciiz " complete number: "
STRING4: .asciiz " OVERFLOW!          "
STRING3: .asciiz " SWAP y = "
STRING2: .asciiz " SWAP x = "
STRING1: .asciiz " y = "
STRING0: .asciiz " x = "
.text
la $a1, memory
la $a2, stack
la $a3, temp
j voidmain
intfactorial:
lw $s0, 0($a2)
li $v1, 1
subu $v1, $s0, $v1
bgtz $v1, LABEL0
li $v0, 1
jr $ra
j LABEL1
LABEL0:
li $v1, 1
subu $t0, $s0, $v1
sw $t0, 4($a3)
sw $s0, 0($a2)
sw $ra, 4($a2)
lw $t0, 4($a3)
move $a0, $t0
sw $a0, 8($a2)
addiu $a2, $a2, 8
addiu $a3, $a3, 12
jal intfactorial
addiu $a3, $a3, -12
addiu $a2, $a2, -8
lw $ra, 4($a2)
lw $s0, 0($a2)
move $t0, $v0
mult $s0, $t0
mflo $t1
move $v0, $t1
jr $ra
LABEL1:
jr $ra
intmod:
lw $s0, 0($a2)
lw $s1, 4($a2)
div $s0, $s1
mflo $t0
mult $t0, $s1
mflo $t1
subu $t2, $s0, $t1
move $s0, $t2
move $v0, $s0
jr $ra
jr $ra
voidswap:
lw $s0, 0($a2)
lw $s1, 4($a2)
li $v0, 4
la $a0, STRING0
syscall
move $a0, $s0
li $v0, 1
syscall
li $v0, 4
la $a0, STRING1
syscall
move $a0, $s1
li $v0, 1
syscall
move $t0, $s0
move $s0, $s1
move $s1, $t0
li $v0, 4
la $a0, STRING2
syscall
move $a0, $s0
li $v0, 1
syscall
li $v0, 4
la $a0, STRING3
syscall
move $a0, $s1
li $v0, 1
syscall
sw $t0, 8($a2)
jr $ra
voidcomplete_num:
lw $s0, 0($a2)
move $s2, $s0
LABEL2:
li $a0, -1
li $v1, 1
mult $a0, $v1
mflo $t0
move $s0, $t0
move $s1, $s2
li $a0, 1
move $s3, $a0
LABEL3:
div $s2, $s3
mflo $t0
mult $t0, $s3
mflo $t1
move $t2, $t1
sw $t0, 0($a3)
sw $t1, 4($a3)
sw $t2, 532($a2)
sw $s0, 0($a2)
sw $s0, 524($a2)
sw $s1, 528($a2)
sw $s1, 536($a2)
sw $s0, 540($a2)
sw $s1, 556($a2)
sw $s0, 560($a2)
sw $ra, 568($a2)
move $a0, $s2
sw $a0, 572($a2)
move $a0, $s3
sw $a0, 576($a2)
addiu $a2, $a2, 572
addiu $a3, $a3, 8
jal intmod
addiu $a3, $a3, -8
addiu $a2, $a2, -572
lw $ra, 568($a2)
lw $s0, 0($a2)
lw $s1, 528($a2)
move $t0, $v0
li $v1, 0
bne $t0, $v1, LABEL4
li $v1, 1
addu $t0, $s0, $v1
move $s0, $t0
subu $t0, $s1, $s3
move $s1, $t0
li $v1, 128
subu $v1, $s0, $v1
bltz $v1, LABEL5
li $v0, 4
la $a0, STRING4
syscall
j LABEL6
LABEL5:
move $a0, $s0
move $v1, $s3
sll $a0, $a0, 2
addiu $a0, $a0, 4
addu $a0, $a0, $a2
sw $v1, 0($a0)
LABEL6:
j LABEL7
LABEL4:
LABEL7:
li $v1, 1
addu $t0, $s3, $v1
move $s3, $t0
subu $v1, $s3, $s2
bltz $v1, LABEL3
li $v1, 0
bne $s1, $v1, LABEL8
li $v0, 4
la $a0, STRING5
syscall
move $a0, $s2
li $v0, 1
syscall
li $a0, 0
move $s3, $a0
LABEL9:
move $a0, $s3
sll $a0, $a0, 2
addiu $a0, $a0, 4
addu $a0, $a0, $a2
lw $t0, 0($a0)
li $v0, 4
la $a0, STRING6
syscall
move $a0, $t0
li $v0, 1
syscall
li $v1, 1
addu $t0, $s3, $v1
move $s3, $t0
subu $v1, $s3, $s0
blez $v1, LABEL9
li $v0, 4
la $a0, STRING7
syscall
j LABEL10
LABEL8:
LABEL10:
li $v1, 1
addu $t0, $s2, $v1
move $s2, $t0
li $v1, 1024
subu $v1, $s2, $v1
bltz $v1, LABEL2
li $v0, 4
la $a0, STRING8
syscall
li $a0, 0
move $s1, $a0
li $a0, 0
move $s3, $a0
LABEL11:
mult $s1, $s3
mflo $t0
move $s0, $t0
mult $s2, $s0
mflo $t0
move $t1, $t0
mult $s1, $s3
mflo $t0
move $s1, $t0
addu $t0, $s1, $s0
addu $t2, $t0, $t1
move $s1, $t2
li $v1, 1
addu $t0, $s3, $v1
move $s3, $t0
li $v1, 1024
sw $t1, 564($a2)
subu $v1, $s3, $v1
bltz $v1, LABEL11
move $s0, $s1
li $a0, 0
move $s3, $a0
LABEL12:
addu $t0, $s0, $s3
move $s0, $t0
li $v1, 1
addu $t0, $s3, $v1
move $s3, $t0
li $v1, 1024
subu $v1, $s3, $v1
bltz $v1, LABEL12
li $v0, 4
la $a0, STRING9
syscall
move $a0, $s0
li $v0, 1
syscall
li $v0, 4
la $a0, STRING10
syscall
li $a0, 0
move $s4, $a0
li $a0, 1
move $s2, $a0
li $a0, 2
move $s1, $a0
LABEL13:
li $v1, 2
div $s1, $v1
mflo $t0
move $s0, $t0
li $a0, 2
move $s3, $a0
LABEL14:
div $s1, $s3
mflo $t0
mult $t0, $s3
mflo $t1
move $t2, $t1
sw $t0, 0($a3)
sw $t1, 4($a3)
sw $t2, 552($a2)
sw $s0, 0($a2)
sw $s0, 524($a2)
sw $s1, 528($a2)
sw $s1, 536($a2)
sw $s0, 540($a2)
sw $s1, 556($a2)
sw $s0, 560($a2)
sw $ra, 568($a2)
move $a0, $s1
sw $a0, 572($a2)
move $a0, $s3
sw $a0, 576($a2)
addiu $a2, $a2, 572
addiu $a3, $a3, 8
jal intmod
addiu $a3, $a3, -8
addiu $a2, $a2, -572
lw $ra, 568($a2)
lw $s0, 0($a2)
lw $s1, 528($a2)
move $t0, $v0
li $v1, 0
bne $t0, $v1, LABEL15
li $a0, 0
move $s2, $a0
j LABEL16
LABEL15:
LABEL16:
li $v1, 1
addu $t0, $s3, $v1
move $s3, $t0
subu $v1, $s3, $s0
blez $v1, LABEL14
li $v1, 1
bne $s2, $v1, LABEL17
li $v0, 4
la $a0, STRING11
syscall
move $a0, $s1
li $v0, 1
syscall
li $v1, 1
addu $t0, $s4, $v1
move $s4, $t0
li $v1, 10
div $s4, $v1
mflo $t0
li $v1, 10
mult $t0, $v1
mflo $t1
move $t2, $t1
sw $t2, 552($a2)
bne $t2, $s4, LABEL18
li $v0, 4
la $a0, STRING12
syscall
j LABEL19
LABEL18:
LABEL19:
j LABEL20
LABEL17:
LABEL20:
li $a0, 1
move $s2, $a0
li $v1, 1
addu $t0, $s1, $v1
move $s1, $t0
li $v1, 1024
subu $v1, $s1, $v1
blez $v1, LABEL13
li $v0, 4
la $a0, STRING13
syscall
move $a0, $s4
li $v0, 1
syscall
jr $ra
voidmain:
sw $ra, 4($a2)
li $a0, 10
sw $a0, 8($a2)
addiu $a2, $a2, 8
addiu $a3, $a3, 4
jal intfactorial
addiu $a3, $a3, -4
addiu $a2, $a2, -8
lw $ra, 4($a2)
move $t0, $v0
move $t1, $t0
li $v0, 4
la $a0, STRING14
syscall
move $a0, $t1
li $v0, 1
syscall
sw $t0, 0($a3)
sw $t1, 0($a2)
sw $ra, 4($a2)
li $a0, 5
sw $a0, 8($a2)
li $a0, 10
sw $a0, 12($a2)
addiu $a2, $a2, 8
addiu $a3, $a3, 4
jal voidswap
addiu $a3, $a3, -4
addiu $a2, $a2, -8
lw $ra, 4($a2)
sw $ra, 4($a2)
li $a0, 2
sw $a0, 8($a2)
addiu $a2, $a2, 8
addiu $a3, $a3, 4
jal voidcomplete_num
addiu $a3, $a3, -4
addiu $a2, $a2, -8
lw $ra, 4($a2)
endofprog:
